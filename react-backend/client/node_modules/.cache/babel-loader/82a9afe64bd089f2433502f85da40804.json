{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar Deferred = require(\"./Deferred\");\n/**\n * Plan is to maybe add tracking via Error objects\n * and other fun stuff!\n */\n\n\nvar ResourceLoan =\n/*#__PURE__*/\nfunction (_Deferred) {\n  _inherits(ResourceLoan, _Deferred);\n\n  /**\n   *\n   * @param  {any} pooledResource the PooledResource this loan belongs to\n   * @return {any}                [description]\n   */\n  function ResourceLoan(pooledResource, Promise) {\n    var _this;\n\n    _classCallCheck(this, ResourceLoan);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ResourceLoan).call(this, Promise));\n    _this._creationTimestamp = Date.now();\n    _this.pooledResource = pooledResource;\n    return _this;\n  }\n\n  _createClass(ResourceLoan, [{\n    key: \"reject\",\n    value: function reject() {\n      /**\n       * Loans can only be resolved at the moment\n       */\n    }\n  }]);\n\n  return ResourceLoan;\n}(Deferred);\n\nmodule.exports = ResourceLoan;","map":null,"metadata":{},"sourceType":"script"}