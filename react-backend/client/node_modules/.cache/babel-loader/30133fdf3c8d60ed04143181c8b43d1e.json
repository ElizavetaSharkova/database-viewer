{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar DoublyLinkedList = require(\"./DoublyLinkedList\");\n\nvar Deque = require(\"./Deque\");\n/**\n * Sort of a internal queue for holding the waiting\n * resource requets for a given \"priority\".\n * Also handles managing timeouts rejections on items (is this the best place for this?)\n * This is the last point where we know which queue a resourceRequest is in\n *\n */\n\n\nvar Queue =\n/*#__PURE__*/\nfunction (_Deque) {\n  _inherits(Queue, _Deque);\n\n  function Queue() {\n    _classCallCheck(this, Queue);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Queue).apply(this, arguments));\n  }\n\n  _createClass(Queue, [{\n    key: \"push\",\n\n    /**\n     * Adds the obj to the end of the list for this slot\n     * we completely override the parent method because we need access to the\n     * node for our rejection handler\n     * @param {any} resourceRequest [description]\n     */\n    value: function push(resourceRequest) {\n      var node = DoublyLinkedList.createNode(resourceRequest);\n      resourceRequest.promise.catch(this._createTimeoutRejectionHandler(node));\n\n      this._list.insertEnd(node);\n    }\n  }, {\n    key: \"_createTimeoutRejectionHandler\",\n    value: function _createTimeoutRejectionHandler(node) {\n      var _this = this;\n\n      return function (reason) {\n        if (reason.name === \"TimeoutError\") {\n          _this._list.remove(node);\n        }\n      };\n    }\n  }]);\n\n  return Queue;\n}(Deque);\n\nmodule.exports = Queue;","map":null,"metadata":{},"sourceType":"script"}