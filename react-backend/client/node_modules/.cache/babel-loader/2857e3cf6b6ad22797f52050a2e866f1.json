{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\elizaveta.sharkova\\\\Learning\\\\React\\\\First\\\\database-viewer\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar Queue = require(\"./Queue\");\n/**\n * @class\n * @private\n */\n\n\nvar PriorityQueue =\n/*#__PURE__*/\nfunction () {\n  function PriorityQueue(size) {\n    _classCallCheck(this, PriorityQueue);\n\n    this._size = Math.max(+size | 0, 1);\n    /** @type {Queue[]} */\n\n    this._slots = []; // initialize arrays to hold queue elements\n\n    for (var i = 0; i < this._size; i++) {\n      this._slots.push(new Queue());\n    }\n  }\n\n  _createClass(PriorityQueue, [{\n    key: \"enqueue\",\n    value: function enqueue(obj, priority) {\n      // Convert to integer with a default value of 0.\n      priority = priority && +priority | 0 || 0;\n\n      if (priority) {\n        if (priority < 0 || priority >= this._size) {\n          priority = this._size - 1; // put obj at the end of the line\n        }\n      }\n\n      this._slots[priority].push(obj);\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      for (var i = 0, sl = this._slots.length; i < sl; i += 1) {\n        if (this._slots[i].length) {\n          return this._slots[i].shift();\n        }\n      }\n\n      return;\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      var _length = 0;\n\n      for (var i = 0, slots = this._slots.length; i < slots; i++) {\n        _length += this._slots[i].length;\n      }\n\n      return _length;\n    }\n  }, {\n    key: \"head\",\n    get: function get() {\n      for (var i = 0, sl = this._slots.length; i < sl; i += 1) {\n        if (this._slots[i].length > 0) {\n          return this._slots[i].head;\n        }\n      }\n\n      return;\n    }\n  }, {\n    key: \"tail\",\n    get: function get() {\n      for (var i = this._slots.length - 1; i >= 0; i--) {\n        if (this._slots[i].length > 0) {\n          return this._slots[i].tail;\n        }\n      }\n\n      return;\n    }\n  }]);\n\n  return PriorityQueue;\n}();\n\nmodule.exports = PriorityQueue;","map":null,"metadata":{},"sourceType":"script"}