{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // This simple piece of code is factored out into a separate class to make it\n// easy to stub it out in tests. It's hard, if not impossible, to cause a\n// transient error on demand in tests.\n\n\nvar TransientErrorLookup = function () {\n  function TransientErrorLookup() {\n    (0, _classCallCheck3.default)(this, TransientErrorLookup);\n  }\n\n  (0, _createClass3.default)(TransientErrorLookup, [{\n    key: \"isTransientError\",\n    value: function isTransientError(error) {\n      // This list of transient errors comes from Microsoft implementation of SqlClient:\n      //  - https://github.com/dotnet/corefx/blob/master/src/System.Data.SqlClient/src/System/Data/SqlClient/SqlInternalConnectionTds.cs#L115\n      var transientErrors = [4060, 10928, 10929, 40197, 40501, 40613];\n      return transientErrors.indexOf(error) !== -1;\n    }\n  }]);\n  return TransientErrorLookup;\n}();\n\nmodule.exports.TransientErrorLookup = TransientErrorLookup;","map":null,"metadata":{},"sourceType":"script"}