{"ast":null,"code":"'use strict';\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar WritableTrackingBuffer = require('./tracking-buffer/writable-tracking-buffer');\n\nvar writeAllHeaders = require('./all-headers').writeToTrackingBuffer;\n/*\n  s2.2.6.6\n */\n\n\nvar SqlBatchPayload = function () {\n  function SqlBatchPayload(sqlText, txnDescriptor, options) {\n    (0, _classCallCheck3.default)(this, SqlBatchPayload);\n    this.sqlText = sqlText;\n    var buffer = new WritableTrackingBuffer(100 + 2 * this.sqlText.length, 'ucs2');\n\n    if (options.tdsVersion >= '7_2') {\n      var outstandingRequestCount = 1;\n      writeAllHeaders(buffer, txnDescriptor, outstandingRequestCount);\n    }\n\n    buffer.writeString(this.sqlText, 'ucs2');\n    this.data = buffer.data;\n  }\n\n  (0, _createClass3.default)(SqlBatchPayload, [{\n    key: 'toString',\n    value: function toString() {\n      var indent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      return indent + ('SQL Batch - ' + this.sqlText);\n    }\n  }]);\n  return SqlBatchPayload;\n}();\n\nmodule.exports = SqlBatchPayload;","map":null,"metadata":{},"sourceType":"script"}